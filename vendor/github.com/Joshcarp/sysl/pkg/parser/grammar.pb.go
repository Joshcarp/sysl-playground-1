// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grammar.proto

package parser

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	empty "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Grammar struct {
	// "!grammar" NAME ":" INDENT Rule* OUTDENT
	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Flags                *Flags           `protobuf:"bytes,2,opt,name=flags,proto3" json:"flags,omitempty"`
	Rules                map[string]*Rule `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Start                string           `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Grammar) Reset()         { *m = Grammar{} }
func (m *Grammar) String() string { return proto.CompactTextString(m) }
func (*Grammar) ProtoMessage()    {}
func (*Grammar) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{0}
}

func (m *Grammar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Grammar.Unmarshal(m, b)
}
func (m *Grammar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Grammar.Marshal(b, m, deterministic)
}
func (m *Grammar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Grammar.Merge(m, src)
}
func (m *Grammar) XXX_Size() int {
	return xxx_messageInfo_Grammar.Size(m)
}
func (m *Grammar) XXX_DiscardUnknown() {
	xxx_messageInfo_Grammar.DiscardUnknown(m)
}

var xxx_messageInfo_Grammar proto.InternalMessageInfo

func (m *Grammar) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Grammar) GetFlags() *Flags {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *Grammar) GetRules() map[string]*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *Grammar) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

type Flags struct {
	// "[" Flag:"," "]"
	Flag                 []*Flag  `protobuf:"bytes,1,rep,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flags) Reset()         { *m = Flags{} }
func (m *Flags) String() string { return proto.CompactTextString(m) }
func (*Flags) ProtoMessage()    {}
func (*Flags) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{1}
}

func (m *Flags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flags.Unmarshal(m, b)
}
func (m *Flags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flags.Marshal(b, m, deterministic)
}
func (m *Flags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flags.Merge(m, src)
}
func (m *Flags) XXX_Size() int {
	return xxx_messageInfo_Flags.Size(m)
}
func (m *Flags) XXX_DiscardUnknown() {
	xxx_messageInfo_Flags.DiscardUnknown(m)
}

var xxx_messageInfo_Flags proto.InternalMessageInfo

func (m *Flags) GetFlag() []*Flag {
	if m != nil {
		return m.Flag
	}
	return nil
}

type Flag struct {
	// <sign>/[-+]/ <token>NAME
	Sign                 string   `protobuf:"bytes,1,opt,name=sign,proto3" json:"sign,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flag) Reset()         { *m = Flag{} }
func (m *Flag) String() string { return proto.CompactTextString(m) }
func (*Flag) ProtoMessage()    {}
func (*Flag) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{2}
}

func (m *Flag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flag.Unmarshal(m, b)
}
func (m *Flag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flag.Marshal(b, m, deterministic)
}
func (m *Flag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flag.Merge(m, src)
}
func (m *Flag) XXX_Size() int {
	return xxx_messageInfo_Flag.Size(m)
}
func (m *Flag) XXX_DiscardUnknown() {
	xxx_messageInfo_Flag.DiscardUnknown(m)
}

var xxx_messageInfo_Flag proto.InternalMessageInfo

func (m *Flag) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *Flag) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Rule struct {
	// RuleName Flags? ":" INDENT Body OUTDENT
	Name                 *RuleName `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Choices              *Choice   `protobuf:"bytes,2,opt,name=choices,proto3" json:"choices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{3}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetName() *RuleName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Rule) GetChoices() *Choice {
	if m != nil {
		return m.Choices
	}
	return nil
}

type RuleName struct {
	// NAME ":" INDENT Body OUTDENT
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Alias                string   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuleName) Reset()         { *m = RuleName{} }
func (m *RuleName) String() string { return proto.CompactTextString(m) }
func (*RuleName) ProtoMessage()    {}
func (*RuleName) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{4}
}

func (m *RuleName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleName.Unmarshal(m, b)
}
func (m *RuleName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleName.Marshal(b, m, deterministic)
}
func (m *RuleName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleName.Merge(m, src)
}
func (m *RuleName) XXX_Size() int {
	return xxx_messageInfo_RuleName.Size(m)
}
func (m *RuleName) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleName.DiscardUnknown(m)
}

var xxx_messageInfo_RuleName proto.InternalMessageInfo

func (m *RuleName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RuleName) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type Choice struct {
	// ("<" NAME ">")? Sequence:":"
	Sequence             []*Sequence `protobuf:"bytes,1,rep,name=sequence,proto3" json:"sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Choice) Reset()         { *m = Choice{} }
func (m *Choice) String() string { return proto.CompactTextString(m) }
func (*Choice) ProtoMessage()    {}
func (*Choice) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{5}
}

func (m *Choice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Choice.Unmarshal(m, b)
}
func (m *Choice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Choice.Marshal(b, m, deterministic)
}
func (m *Choice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Choice.Merge(m, src)
}
func (m *Choice) XXX_Size() int {
	return xxx_messageInfo_Choice.Size(m)
}
func (m *Choice) XXX_DiscardUnknown() {
	xxx_messageInfo_Choice.DiscardUnknown(m)
}

var xxx_messageInfo_Choice proto.InternalMessageInfo

func (m *Choice) GetSequence() []*Sequence {
	if m != nil {
		return m.Sequence
	}
	return nil
}

type Sequence struct {
	// Term*:"|"
	Term                 []*Term  `protobuf:"bytes,1,rep,name=term,proto3" json:"term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sequence) Reset()         { *m = Sequence{} }
func (m *Sequence) String() string { return proto.CompactTextString(m) }
func (*Sequence) ProtoMessage()    {}
func (*Sequence) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{6}
}

func (m *Sequence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sequence.Unmarshal(m, b)
}
func (m *Sequence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sequence.Marshal(b, m, deterministic)
}
func (m *Sequence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sequence.Merge(m, src)
}
func (m *Sequence) XXX_Size() int {
	return xxx_messageInfo_Sequence.Size(m)
}
func (m *Sequence) XXX_DiscardUnknown() {
	xxx_messageInfo_Sequence.DiscardUnknown(m)
}

var xxx_messageInfo_Sequence proto.InternalMessageInfo

func (m *Sequence) GetTerm() []*Term {
	if m != nil {
		return m.Term
	}
	return nil
}

type Term struct {
	// Atom Quantifier
	Atom                 *Atom       `protobuf:"bytes,1,opt,name=atom,proto3" json:"atom,omitempty"`
	Quantifier           *Quantifier `protobuf:"bytes,2,opt,name=quantifier,proto3" json:"quantifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Term) Reset()         { *m = Term{} }
func (m *Term) String() string { return proto.CompactTextString(m) }
func (*Term) ProtoMessage()    {}
func (*Term) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{7}
}

func (m *Term) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Term.Unmarshal(m, b)
}
func (m *Term) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Term.Marshal(b, m, deterministic)
}
func (m *Term) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Term.Merge(m, src)
}
func (m *Term) XXX_Size() int {
	return xxx_messageInfo_Term.Size(m)
}
func (m *Term) XXX_DiscardUnknown() {
	xxx_messageInfo_Term.DiscardUnknown(m)
}

var xxx_messageInfo_Term proto.InternalMessageInfo

func (m *Term) GetAtom() *Atom {
	if m != nil {
		return m.Atom
	}
	return nil
}

func (m *Term) GetQuantifier() *Quantifier {
	if m != nil {
		return m.Quantifier
	}
	return nil
}

type Atom struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// ("<" NAME ">")? ( string | regexp | "(" NestedBody ")" )
	//
	// Types that are valid to be assigned to Union:
	//	*Atom_String_
	//	*Atom_Regexp
	//	*Atom_Rulename
	//	*Atom_Choices
	Union                isAtom_Union `protobuf_oneof:"union"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Atom) Reset()         { *m = Atom{} }
func (m *Atom) String() string { return proto.CompactTextString(m) }
func (*Atom) ProtoMessage()    {}
func (*Atom) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{8}
}

func (m *Atom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Atom.Unmarshal(m, b)
}
func (m *Atom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Atom.Marshal(b, m, deterministic)
}
func (m *Atom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Atom.Merge(m, src)
}
func (m *Atom) XXX_Size() int {
	return xxx_messageInfo_Atom.Size(m)
}
func (m *Atom) XXX_DiscardUnknown() {
	xxx_messageInfo_Atom.DiscardUnknown(m)
}

var xxx_messageInfo_Atom proto.InternalMessageInfo

func (m *Atom) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type isAtom_Union interface {
	isAtom_Union()
}

type Atom_String_ struct {
	String_ string `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

type Atom_Regexp struct {
	Regexp string `protobuf:"bytes,3,opt,name=regexp,proto3,oneof"`
}

type Atom_Rulename struct {
	Rulename *RuleName `protobuf:"bytes,4,opt,name=rulename,proto3,oneof"`
}

type Atom_Choices struct {
	Choices *Choice `protobuf:"bytes,5,opt,name=choices,proto3,oneof"`
}

func (*Atom_String_) isAtom_Union() {}

func (*Atom_Regexp) isAtom_Union() {}

func (*Atom_Rulename) isAtom_Union() {}

func (*Atom_Choices) isAtom_Union() {}

func (m *Atom) GetUnion() isAtom_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (m *Atom) GetString_() string {
	if x, ok := m.GetUnion().(*Atom_String_); ok {
		return x.String_
	}
	return ""
}

func (m *Atom) GetRegexp() string {
	if x, ok := m.GetUnion().(*Atom_Regexp); ok {
		return x.Regexp
	}
	return ""
}

func (m *Atom) GetRulename() *RuleName {
	if x, ok := m.GetUnion().(*Atom_Rulename); ok {
		return x.Rulename
	}
	return nil
}

func (m *Atom) GetChoices() *Choice {
	if x, ok := m.GetUnion().(*Atom_Choices); ok {
		return x.Choices
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Atom) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Atom_String_)(nil),
		(*Atom_Regexp)(nil),
		(*Atom_Rulename)(nil),
		(*Atom_Choices)(nil),
	}
}

type Quantifier struct {
	//( <opt>"?" | <zero_plus>"*" | <one_plus>"+" | ":" <separator>Atom )*
	//
	// Types that are valid to be assigned to Union:
	//	*Quantifier_Optional
	//	*Quantifier_ZeroPlus
	//	*Quantifier_OnePlus
	//	*Quantifier_Separator
	Union                isQuantifier_Union `protobuf_oneof:"union"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Quantifier) Reset()         { *m = Quantifier{} }
func (m *Quantifier) String() string { return proto.CompactTextString(m) }
func (*Quantifier) ProtoMessage()    {}
func (*Quantifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_91366bc018da6189, []int{9}
}

func (m *Quantifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quantifier.Unmarshal(m, b)
}
func (m *Quantifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quantifier.Marshal(b, m, deterministic)
}
func (m *Quantifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quantifier.Merge(m, src)
}
func (m *Quantifier) XXX_Size() int {
	return xxx_messageInfo_Quantifier.Size(m)
}
func (m *Quantifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Quantifier.DiscardUnknown(m)
}

var xxx_messageInfo_Quantifier proto.InternalMessageInfo

type isQuantifier_Union interface {
	isQuantifier_Union()
}

type Quantifier_Optional struct {
	Optional *empty.Empty `protobuf:"bytes,1,opt,name=optional,proto3,oneof"`
}

type Quantifier_ZeroPlus struct {
	ZeroPlus *empty.Empty `protobuf:"bytes,2,opt,name=zero_plus,json=zeroPlus,proto3,oneof"`
}

type Quantifier_OnePlus struct {
	OnePlus *empty.Empty `protobuf:"bytes,3,opt,name=one_plus,json=onePlus,proto3,oneof"`
}

type Quantifier_Separator struct {
	Separator *Atom `protobuf:"bytes,4,opt,name=separator,proto3,oneof"`
}

func (*Quantifier_Optional) isQuantifier_Union() {}

func (*Quantifier_ZeroPlus) isQuantifier_Union() {}

func (*Quantifier_OnePlus) isQuantifier_Union() {}

func (*Quantifier_Separator) isQuantifier_Union() {}

func (m *Quantifier) GetUnion() isQuantifier_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (m *Quantifier) GetOptional() *empty.Empty {
	if x, ok := m.GetUnion().(*Quantifier_Optional); ok {
		return x.Optional
	}
	return nil
}

func (m *Quantifier) GetZeroPlus() *empty.Empty {
	if x, ok := m.GetUnion().(*Quantifier_ZeroPlus); ok {
		return x.ZeroPlus
	}
	return nil
}

func (m *Quantifier) GetOnePlus() *empty.Empty {
	if x, ok := m.GetUnion().(*Quantifier_OnePlus); ok {
		return x.OnePlus
	}
	return nil
}

func (m *Quantifier) GetSeparator() *Atom {
	if x, ok := m.GetUnion().(*Quantifier_Separator); ok {
		return x.Separator
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Quantifier) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Quantifier_Optional)(nil),
		(*Quantifier_ZeroPlus)(nil),
		(*Quantifier_OnePlus)(nil),
		(*Quantifier_Separator)(nil),
	}
}

var E_Base = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FileOptions)(nil),
	ExtensionType: (*Grammar)(nil),
	Field:         50000,
	Name:          "sysl.base",
	Tag:           "bytes,50000,opt,name=base",
	Filename:      "grammar.proto",
}

func init() {
	proto.RegisterType((*Grammar)(nil), "sysl.Grammar")
	proto.RegisterMapType((map[string]*Rule)(nil), "sysl.Grammar.RulesEntry")
	proto.RegisterType((*Flags)(nil), "sysl.Flags")
	proto.RegisterType((*Flag)(nil), "sysl.Flag")
	proto.RegisterType((*Rule)(nil), "sysl.Rule")
	proto.RegisterType((*RuleName)(nil), "sysl.RuleName")
	proto.RegisterType((*Choice)(nil), "sysl.Choice")
	proto.RegisterType((*Sequence)(nil), "sysl.Sequence")
	proto.RegisterType((*Term)(nil), "sysl.Term")
	proto.RegisterType((*Atom)(nil), "sysl.Atom")
	proto.RegisterType((*Quantifier)(nil), "sysl.Quantifier")
	proto.RegisterExtension(E_Base)
}

func init() { proto.RegisterFile("grammar.proto", fileDescriptor_91366bc018da6189) }

var fileDescriptor_91366bc018da6189 = []byte{
	// 604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0x13, 0x3b, 0x71, 0x26, 0xb4, 0xaa, 0x56, 0x15, 0xb2, 0x0a, 0x42, 0xc1, 0x07, 0x88,
	0x2a, 0xe4, 0x56, 0x6d, 0x91, 0x50, 0x6f, 0x2d, 0xb4, 0xe4, 0xc4, 0xcf, 0xc2, 0x01, 0x71, 0x41,
	0xdb, 0x74, 0x6a, 0xac, 0xda, 0xbb, 0xee, 0xee, 0x1a, 0x11, 0x1e, 0x80, 0x97, 0xe1, 0x55, 0x38,
	0xf0, 0x0e, 0xbc, 0x08, 0xda, 0x1f, 0x27, 0x29, 0xad, 0xe0, 0xe6, 0x99, 0xf9, 0x66, 0xe6, 0xfb,
	0xbe, 0xf1, 0xc2, 0x5a, 0x2e, 0x59, 0x55, 0x31, 0x99, 0xd5, 0x52, 0x68, 0x41, 0x42, 0x35, 0x57,
	0xe5, 0xd6, 0x38, 0x17, 0x22, 0x2f, 0x71, 0xc7, 0xe6, 0xce, 0x9a, 0x8b, 0x9d, 0x73, 0x54, 0x33,
	0x59, 0xd4, 0x5a, 0x78, 0xdc, 0xd6, 0xbd, 0xbf, 0x11, 0x58, 0xd5, 0x7a, 0xee, 0x8a, 0xe9, 0xcf,
	0x00, 0x06, 0x2f, 0xdd, 0x58, 0x42, 0x20, 0xe4, 0xac, 0xc2, 0x24, 0x18, 0x07, 0x93, 0x21, 0xb5,
	0xdf, 0xe4, 0x21, 0x44, 0x17, 0x25, 0xcb, 0x55, 0xd2, 0x1d, 0x07, 0x93, 0xd1, 0xde, 0x28, 0x33,
	0x4b, 0xb3, 0x53, 0x93, 0xa2, 0xae, 0x42, 0x32, 0x88, 0x64, 0x53, 0xa2, 0x4a, 0x7a, 0xe3, 0xde,
	0x64, 0xb4, 0x97, 0x38, 0x88, 0x1f, 0x9a, 0x51, 0x53, 0x3a, 0xe1, 0x5a, 0xce, 0xa9, 0x83, 0x91,
	0x4d, 0x88, 0x94, 0x66, 0x52, 0x27, 0xa1, 0xdd, 0xe3, 0x82, 0xad, 0x17, 0x00, 0x4b, 0x28, 0xd9,
	0x80, 0xde, 0x25, 0xce, 0x3d, 0x13, 0xf3, 0x49, 0xc6, 0x10, 0x7d, 0x61, 0x65, 0x83, 0x9e, 0x08,
	0xb8, 0x2d, 0xa6, 0x85, 0xba, 0xc2, 0x61, 0xf7, 0x59, 0x90, 0x3e, 0x86, 0xc8, 0x72, 0x23, 0x0f,
	0x20, 0x34, 0xec, 0x92, 0xc0, 0x72, 0x82, 0x25, 0x6d, 0x6a, 0xf3, 0xe9, 0x2e, 0x84, 0x26, 0x32,
	0x9a, 0x55, 0x91, 0xf3, 0x56, 0xb3, 0xf9, 0x36, 0x04, 0xb5, 0xb8, 0x44, 0x6e, 0x57, 0x0d, 0xa9,
	0x0b, 0x52, 0x0a, 0xa1, 0xd9, 0x46, 0xd2, 0x15, 0x97, 0x46, 0x7b, 0xeb, 0x4b, 0x1e, 0xaf, 0x58,
	0x85, 0xde, 0xb5, 0x47, 0x30, 0x98, 0x7d, 0x16, 0xc5, 0x0c, 0x5b, 0xdf, 0xee, 0x38, 0xd8, 0x73,
	0x9b, 0xa4, 0x6d, 0x31, 0x3d, 0x80, 0xb8, 0xed, 0xbc, 0xd5, 0xfd, 0x4d, 0x88, 0x58, 0x59, 0x30,
	0xd5, 0x32, 0xb1, 0x41, 0x7a, 0x00, 0x7d, 0x37, 0x88, 0x6c, 0x43, 0xac, 0xf0, 0xaa, 0x41, 0x3e,
	0x43, 0xaf, 0xd4, 0xf3, 0x79, 0xe7, 0xb3, 0x74, 0x51, 0x4f, 0xb7, 0x21, 0x6e, 0xb3, 0xc6, 0x1d,
	0x8d, 0xb2, 0xba, 0xee, 0xce, 0x7b, 0x94, 0x15, 0xb5, 0xf9, 0xf4, 0x03, 0x84, 0x26, 0x32, 0x38,
	0xa6, 0x45, 0xe5, 0xb5, 0x7a, 0xdc, 0x91, 0x16, 0x15, 0xb5, 0x79, 0xb2, 0x0b, 0x70, 0xd5, 0x30,
	0xae, 0x8b, 0x8b, 0x02, 0xa5, 0x97, 0xba, 0xe1, 0x50, 0x6f, 0x17, 0x79, 0xba, 0x82, 0x49, 0x7f,
	0x04, 0x10, 0x9a, 0x01, 0x64, 0x1d, 0xba, 0xc5, 0xb9, 0x1d, 0x1c, 0xd1, 0x6e, 0x71, 0x4e, 0x12,
	0xe8, 0x2b, 0x2d, 0x0b, 0x9e, 0x3b, 0xad, 0xd3, 0x0e, 0xf5, 0xb1, 0xa9, 0x48, 0xcc, 0xf1, 0x6b,
	0x9d, 0xf4, 0xda, 0x8a, 0x8b, 0xc9, 0x13, 0x88, 0xcd, 0x2f, 0x65, 0x6d, 0x0b, 0x6f, 0x3b, 0xc7,
	0xb4, 0x43, 0x17, 0x08, 0x32, 0x59, 0x1e, 0x25, 0xba, 0x79, 0x94, 0x69, 0x67, 0x71, 0x96, 0xe3,
	0x01, 0x44, 0x0d, 0x2f, 0x04, 0x4f, 0x7f, 0x07, 0x00, 0x4b, 0x21, 0xe4, 0x00, 0x62, 0x51, 0xeb,
	0x42, 0x70, 0x56, 0x7a, 0x4b, 0xee, 0x66, 0xee, 0x71, 0x65, 0xed, 0xe3, 0xca, 0x4e, 0xcc, 0xe3,
	0x32, 0x7b, 0x5b, 0x24, 0x79, 0x0a, 0xc3, 0x6f, 0x28, 0xc5, 0xa7, 0xba, 0x6c, 0xda, 0xdf, 0xe1,
	0x1f, 0x6d, 0x06, 0xfa, 0xa6, 0x6c, 0x14, 0xd9, 0x87, 0x58, 0x70, 0x74, 0x5d, 0xbd, 0xff, 0x74,
	0x0d, 0x04, 0x47, 0xdb, 0xb4, 0x0d, 0x43, 0x85, 0x35, 0x93, 0x4c, 0x0b, 0xe9, 0x2d, 0x59, 0xb9,
	0xda, 0xb4, 0x43, 0x97, 0xe5, 0x85, 0xca, 0xc3, 0x23, 0x08, 0xcf, 0x98, 0x42, 0x72, 0xff, 0xc6,
	0xfc, 0xd3, 0xa2, 0xc4, 0xd7, 0x56, 0x87, 0x4a, 0x7e, 0x7d, 0x77, 0x2c, 0xd6, 0xae, 0xbd, 0x6f,
	0x6a, 0x5b, 0x8f, 0xe3, 0x8f, 0xfd, 0x9a, 0x49, 0x85, 0xf2, 0xac, 0x6f, 0x9b, 0xf7, 0xff, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x6b, 0x9a, 0xd9, 0x1d, 0xad, 0x04, 0x00, 0x00,
}
