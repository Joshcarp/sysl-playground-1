syntax = "proto3";

package sysl;

option go_package = "parser";

import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

message Grammar {
    // "!grammar" NAME ":" INDENT Rule* OUTDENT
    string name = 1;
    Flags flags = 2;
    map<string, Rule> rules = 3;
    string start = 4;
}

message Flags {
    // "[" Flag:"," "]"
    repeated Flag flag = 1;
}

message Flag {
    // <sign>/[-+]/ <token>NAME
    string sign = 1;
    string token = 2;
}

message Rule {
    // RuleName Flags? ":" INDENT Body OUTDENT
    RuleName name = 1;
    Choice choices = 2;
}

message RuleName {
    // NAME ":" INDENT Body OUTDENT
    string name = 1;
    string alias = 2;
}

message Choice {
    // ("<" NAME ">")? Sequence:":"
    repeated Sequence sequence = 1;
}

message Sequence {
    // Term*:"|"
    repeated Term term = 1;
}

message Term {
    // Atom Quantifier
    Atom atom = 1;
    Quantifier quantifier = 2;
}

message Atom {
    int32 id = 1;
    // ("<" NAME ">")? ( string | regexp | "(" NestedBody ")" )
    oneof union {
        string string = 2;
        string regexp = 3;
        RuleName rulename = 4;
        Choice choices = 5;
    }
}

message Quantifier {
    //( <opt>"?" | <zero_plus>"*" | <one_plus>"+" | ":" <separator>Atom )*
    oneof union {
        google.protobuf.Empty optional = 1;
        google.protobuf.Empty zero_plus = 2;
        google.protobuf.Empty one_plus = 3;
        Atom separator = 4;
    }
}

extend google.protobuf.FileOptions {
    Grammar base = 50000;
}

// option (base) = {
//     name:
// }
